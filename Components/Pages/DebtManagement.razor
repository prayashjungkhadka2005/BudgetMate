@page "/debtmanagement"
@using BudgetMate.Components.Services
@using BudgetMate.Components.Layout
@using BudgetMate.Components.Models
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.Forms
@inject BudgetMate.Components.Services.UserService UserService

<div class="pending-debts-container">
    <h3 class="table-title">Pending Debts</h3>

    <div class="filter-buttons">
        <button class="filter-btn">This Week</button>
        <button class="filter-btn">This Month</button>
        <button class="filter-btn">Custom</button>
    </div>

    @if (!string.IsNullOrEmpty(message))
    {
            <div class="@((isSuccess ? "success" : "error"))">@message</div>
    }

    <table class="styled-table">
        <thead>
            <tr>
                <th>Due Date</th>
                <th>Source</th>
                <th>Amount</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (pendingDebts == null || !pendingDebts.Any())
            {
                    <tr>
                        <td colspan="4" class="no-debts-message">No debts to clear.</td>
                    </tr>
            }
            else
            {
                @foreach (var debt in pendingDebts)
                {
                            <tr>
                                <td>@debt.DebtDueDate</td>
                                <td>@debt.SourceOfDebt</td>
                                <td>$@debt.DebtAmount</td>
                                <td>
                                    <button class="clear-btn" @onclick="() => ShowConfirmationModal(debt.DebtId)">Clear</button>
                                </td>
                            </tr>
                }
            }
        </tbody>
    </table>
</div>

<!-- Overdue Debts Section -->
<div class="overdue-debts-container">
    <h3 class="table-title overdue-title">Overdue Debts</h3>

    <table class="styled-table overdue-table">
        <thead>
            <tr>
                <th>Due Date</th>
                <th>Source</th>
                <th>Amount</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (overdueDebts == null || !overdueDebts.Any())
            {
                    <tr>
                        <td colspan="4" class="no-debts-message">No overdue debts.</td>
                    </tr>
            }
            else
            {
                @foreach (var debt in overdueDebts)
                {
                            <tr>
                                <td>@debt.DebtDueDate</td>
                                <td>@debt.SourceOfDebt</td>
                                <td>$@debt.DebtAmount</td>
                                <td>
                                    <button class="clear-btn" @onclick="() => ShowConfirmationModal(debt.DebtId)">Clear</button>
                                </td>
                            </tr>
                }
            }
        </tbody>
    </table>
</div>

<!-- Cleared Debts Section -->
<div class="cleared-debts-container">
    <h3 class="table-title">Cleared Debts</h3>

    <table class="styled-table">
        <thead>
            <tr>
                <th>Due Date</th>
                <th>Source</th>
                <th>Amount</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @if (clearedDebts == null || !clearedDebts.Any())
            {
                    <tr>
                        <td colspan="4" class="no-debts-message">No cleared debts.</td>
                    </tr>
            }
            else
            {
                @foreach (var debt in clearedDebts)
                {
                            <tr>
                                <td>@debt.DebtDueDate</td>
                                <td>@debt.SourceOfDebt</td>
                                <td>$@debt.DebtAmount</td>
                                <td><span class="paid-status">Paid</span></td>
                            </tr>
                }
            }
        </tbody>
    </table>
</div>

@if (isModalVisible)
{
        <div class="modal-overlay" @onclick="CloseModal">
            <div class="modal-container" @onclick:stopPropagation="true">
                <div class="modal-header">
                    <h3>Confirm Debt Clearance</h3>
                    <button class="close-btn" @onclick="CloseModal">&times;</button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to clear this debt?</p>
                </div>
                <div class="modal-footer">
                    <button class="cancel-btn" @onclick="CloseModal">Cancel</button>
                    <button class="confirm-btn" @onclick="() => ClearDebt(debtToClearId)">Confirm</button>
                </div>
            </div>
        </div>
}

@code {
    private List<Debt> pendingDebts { get; set; }
    private List<Debt> overdueDebts { get; set; }
    private List<Debt> clearedDebts { get; set; }
    private bool isModalVisible { get; set; }
    private int debtToClearId { get; set; }
    private string message;
    private bool isSuccess = false;

    protected override void OnInitialized()
    {
        pendingDebts = UserService.GetPendingDebts();
        overdueDebts = UserService.GetOverdueDebts();
        clearedDebts = UserService.GetClearedDebts(); // Fetch cleared debts
    }

    private void ShowConfirmationModal(int debtId)
    {
        debtToClearId = debtId;
        isModalVisible = true;
    }

    private void CloseModal()
    {
        isModalVisible = false;
    }

    private async Task ClearDebt(int debtId)
    {
        bool isCleared = UserService.ClearDebt(debtId);

        if (isCleared)
        {
            pendingDebts = UserService.GetPendingDebts();
            overdueDebts = UserService.GetOverdueDebts();
            clearedDebts = UserService.GetClearedDebts();
            StateHasChanged();
        }
        else
        {
            message = "Not enough balance to clear the debt";
        }

        CloseModal();
    }
}

